/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>


/ {
    combos {
        compatible = "zmk,combos";

        L_Brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <4 3>;
        };

        L_Brackets {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <16 15>;
        };

        L_Parenthesis {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <28 27>;
        };

        L_Less {
            bindings = <&kp LESS_THAN>;
            key-positions = <29 28>;
        };

        R_Brace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <7 8>;
        };

        R_Brackets {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <20 19>;
        };

        new_combo {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <32 31>;
        };

        new_combo {
            bindings = <&kp GREATER_THAN>;
            key-positions = <30 31>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
   &kp TAB  &kp Q  &kp W         &kp E        &kp R        &kp T        &kp Y            &kp U      &kp I    &kp O     &kp P    &kp BACKSLASH
&kp LSHIFT  &kp A  &kp S         &kp D        &kp F        &kp G        &kp H            &kp J      &kp K    &kp L  &kp SEMI  &mt RSHIFT APOS
 &kp RCTRL  &kp Z  &kp X         &kp C        &kp V        &kp B        &kp N            &kp M  &kp COMMA  &kp DOT  &kp FSLH      &lt 3 GRAVE
                          &kp LEFT_ALT  &lt 1 SPACE  &lt 2 EQUAL  &lt 1 ENTER  &lt 2 BACKSPACE   &kp LGUI
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESC  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5  &kp N6    &kp N7          &kp N8     &kp N9  &kp N0  &kp BACKSLASH
 &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp LEFT          &kp UP  &kp RIGHT  &trans         &trans
 &trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp DOWN_ARROW     &trans  &trans         &trans
                         &trans  &trans  &trans  &trans   &kp DEL          &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp GRAVE  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT  &kp CARET   &kp AMPS  &kp KP_MULTIPLY  &kp LPAR  &kp RPAR   &kp BSPC
   &trans    &trans  &trans    &trans    &trans     &trans  &kp MINUS  &kp EQUAL         &kp LBKT  &kp RBKT  &kp BSLH  &kp GRAVE
   &trans    &trans  &trans    &trans    &trans     &trans  &kp UNDER   &kp PLUS         &kp LBRC  &kp RBRC  &kp PIPE  &kp TILDE
                               &trans    &trans     &trans     &trans     &trans           &trans
            >;
        };

        Layer__3 {
            bindings = <
    &trans      &trans      &trans  &trans  &trans           &trans  &trans       &kp F12           &kp F7  &kp F8  &kp F9  &trans
    &bt BT_CLR  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &out OUT_TOG &rgb_ug RGB_TOG  &trans       &kp F11           &kp F4  &kp F5  &kp F6  &trans
    &trans      &trans      &trans  &trans  &trans  &rgb_ug RGB_EFF  &trans       &kp F10           &kp F1  &kp F2  &kp F3  &trans
                                    &trans  &trans           &trans  &trans  &kp K_VOL_DN  &kp K_VOLUME_UP
            >;
        };
    };
};
